<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Survey\Survey;

/**
 * SurveyRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SurveyRepository extends \Doctrine\ORM\EntityRepository
{
    public function selectSurveysByParams($filter)
    {
        $query = $this->createQueryBuilder('Surveys')
            ->select('s, t, u')
            ->from('AppBundle:Survey\Survey', 's')
            ->join('s.type', 't')
            ->join('s.user', 'u')
            ->where('s.status = ?1')
            ->setParameter('1', 'submitted')
            ->orderBy('s.updatedAt', 'DESC');

        if ($filter->type && $filter->type != 'All') {
            $query->andWhere('t.name = ?2')
                ->setParameter('2', $filter->type)
            ;
        }

        if ($filter->start && $filter->end) {
            $query->andWhere('s.createdAt BETWEEN ?3 AND ?4')
                ->setParameter('3', $filter->getStart())
                ->setParameter('4', $filter->getEnd());
        }

        return $query->getQuery()->getResult();
    }

    public function selectLastSurveys()
    {
        $query = $this->createQueryBuilder('s')
            ->where('s.status = ?1')
            ->setParameter('1', 'submitted')
            ->orderBy('s.updatedAt', 'DESC')
            ->setMaxResults(5);

        return $query->getQuery()->getResult();
    }

    public function findSurveyByUser($user)
    {
        $query = $this->createQueryBuilder('s')
            ->where('s.user = :user')
            ->setParameter('user', $user)
            ->orderBy('s.updatedAt', 'DESC')
            ->getQuery();

        return $query->getResult();
    }
}
